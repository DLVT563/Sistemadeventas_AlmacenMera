@model Sistemadeventas_AlmacenMera.Models.Usuario

@{ 
    ViewData["Title"] = "Editar usuario";
    var inicial = string.IsNullOrEmpty(Model?.Nombre) ? "U" : Model.Nombre.Substring(0, 1).ToUpper();
    var fotoActual = string.IsNullOrEmpty(Model?.FotoPerfilPath) ? string.Empty : Url.Content($"~/{Model.FotoPerfilPath}");
}

<div class="container mt-4">
    <div class="row justify-content-center">
        <div class="col-lg-9 col-xl-8">
            <div class="card shadow-sm">
                <div class="card-header bg-warning text-dark">
                    <h4 class="mb-0">Editar datos del usuario</h4>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" enctype="multipart/form-data">
                        <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>
                        <input type="hidden" asp-for="IdUsuario" />

                        <div class="row g-4">
                            <div class="col-md-5 text-center">
                                <div class="d-flex flex-column align-items-center gap-3">
                                    <div id="avatarPlaceholder" class="profile-avatar-placeholder @(string.IsNullOrEmpty(fotoActual) ? string.Empty : "d-none")">@inicial</div>
                                    <img id="avatarPreview" src="@fotoActual" alt="Foto de perfil" class="profile-avatar @(string.IsNullOrEmpty(fotoActual) ? "d-none" : string.Empty)" />
                                    <div class="w-100">
                                        <label class="form-label" for="fotoPerfil">Fotografía de perfil</label>
                                        <input type="file" class="form-control" id="fotoPerfil" name="nuevaFoto" accept="image/*" />
                                        <small class="text-muted">Sube una nueva imagen para reemplazar la actual.</small>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-7">
                                <div class="mb-3">
                                    <label asp-for="Nombre" class="form-label"></label>
                                    <input asp-for="Nombre" class="form-control" />
                                    <span asp-validation-for="Nombre" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Email" class="form-label"></label>
                                    <input asp-for="Email" class="form-control" type="email" />
                                    <span asp-validation-for="Email" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Contraseña" class="form-label"></label>
                                    <input asp-for="Contraseña" class="form-control" type="password" />
                                    <span asp-validation-for="Contraseña" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="IdRol" class="form-label">Rol</label>
                                    <select asp-for="IdRol" class="form-select" asp-items="ViewBag.IdRol"></select>
                                    <span asp-validation-for="IdRol" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="FechaCreacion" class="form-label"></label>
                                    <input asp-for="FechaCreacion" class="form-control" type="datetime-local" asp-format="{0:yyyy-MM-ddTHH:mm}" />
                                    <span asp-validation-for="FechaCreacion" class="text-danger"></span>
                                </div>
                                <div class="mb-3">
                                    <label asp-for="Estado" class="form-label"></label>
                                    <input asp-for="Estado" class="form-control" />
                                    <span asp-validation-for="Estado" class="text-danger"></span>
                                </div>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between mt-4">
                            <a asp-action="Index" class="btn btn-outline-secondary">
                                <i class="bi bi-arrow-left-circle"></i> Volver al listado
                            </a>
                            <button type="submit" class="btn btn-warning text-white">
                                <i class="bi bi-save"></i> Guardar cambios
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
    <script>
        (function () {
            const inputFoto = document.getElementById('fotoPerfil');
            const preview = document.getElementById('avatarPreview');
            const placeholder = document.getElementById('avatarPlaceholder');

            const nombreInput = document.getElementById('Nombre');

            if (inputFoto) {
                inputFoto.addEventListener('change', function (event) {
                    const file = event.target.files[0];
                    if (file) {
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            preview.src = e.target.result;
                            preview.classList.remove('d-none');
                            placeholder.classList.add('d-none');
                        };
                        reader.readAsDataURL(file);
                    } else {
                        preview.src = '@fotoActual';
                        if (preview.src) {
                            preview.classList.remove('d-none');
                            placeholder.classList.add('d-none');
                        } else {
                            preview.classList.add('d-none');
                            placeholder.classList.remove('d-none');
                            placeholder.textContent = nombreInput && nombreInput.value ? nombreInput.value.trim().substring(0, 1).toUpperCase() : 'U';
                        }
                    }
                });
            }

            if (nombreInput) {
                nombreInput.addEventListener('input', function (event) {
                    if (preview.classList.contains('d-none')) {
                        const valor = event.target.value.trim();
                        placeholder.textContent = valor ? valor.substring(0, 1).toUpperCase() : 'U';
                    }
                });
            }
        })();
    </script>
}
